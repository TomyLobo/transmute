<!-- nallar's BuildCraft ant build script edited for OpenCCSensors and edited again for Transmute -->
<project name="Transmute" default="main">
	<property environment="env"/>
	<!-- Properties -->

	<property name="build.dir"           value="build"/>
	<property name="src.dir"             value="src"/>
	<property name="lib.dir"             value="lib"/>

	<property name="download.dir"        value="download"/>

	<property name="classes.dir"         value="${build.dir}/classes"/>
	<property name="jar.dir"             value="${build.dir}/dist"/>

	<property name="forge.dir"           value="${build.dir}/forge"/>
	<property name="mcp.dir"             value="${forge.dir}/mcp"/>

	<property name="mcpsrc.dir"          value="${mcp.dir}/src/minecraft"/>
	<property name="mcpbin.dir"          value="${mcp.dir}/bin/minecraft"/>
	<property name="mcplib.dir"          value="${mcp.dir}/lib"/>

	<property name="mc.version"          value="1.4.7"/>
	<property name="forge.version"       value="6.6.0.518"/>
	<property name="mod.version"         value="0.0.1"/>
	<property name="mod.name"            value="Transmute"/>

	<property name="forge.name"          value="minecraftforge-src-${mc.version}-${forge.version}.zip"/>

	<available property="forge-exists" file="${download.dir}/${forge.name}"/>

	<condition property="out-of-date">
		<not>
			<and>
				<available file="${download.dir}/${forge.name}"/>
				<available file="${mcpsrc.dir}"/>
			</and>
		</not>
	</condition>

	<mkdir dir="${download.dir}"/>

	<!-- Targets -->

	<!-- Clear build directory -->
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>

	<!-- Set full version -->
	<target name="initialize-version">
		<echo message="Starting build for ${mod.name} v${mod.version}"/>
	</target>

	<!-- Download necessary files -->
	<target name="download-files" depends="download-forge"/>

	<!-- Download forge (if it doesn't exist) -->
	<target name="download-forge" unless="forge-exists" >
		<get src="http://files.minecraftforge.net/${forge.name}" dest="${download.dir}" usetimestamp="True"/>
	</target>

	<!-- Setup mcp and forge -->
	<target name="setup" depends="download-files" if="out-of-date">

		<delete dir="${mcp.dir}"/>
		<delete dir="${forge.dir}"/>

		<!-- Unzip them -->
		<unzip dest="${build.dir}" src="${download.dir}/${forge.name}"/>

		<!-- Install forge -->
		<exec dir="${forge.dir}" executable="cmd" osfamily="windows">
			<arg line="/c install.cmd"/>
		</exec>

		<exec dir="${forge.dir}" executable="sh" osfamily="unix">
			<arg value="install.sh"/>
		</exec>

	</target>

	<target name="compile" depends="initialize-version,setup">

		<delete dir="${classes.dir}"/>
		<mkdir dir="${classes.dir}"/>

		<copy todir="${mcpsrc.dir}">
			<fileset dir="${src.dir}"/>
			<filterset>
				<filter token="VERSION" value="${mod.version}"/>
			</filterset>
		</copy>

		<!-- Copy libs -->
		<copy todir="${mcplib.dir}" failonerror="false">
			<fileset dir="${lib.dir}"/>
			<regexpmapper from="(.*)\.[^.]*$" to="${mod.name}-dep-\1.jar"/>
		</copy>

		<!-- Recompile -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c recompile.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="recompile.sh"/>
		</exec>

		<!-- Reobfuscate -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c reobfuscate.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="reobfuscate.sh"/>
		</exec>

		<!-- Copy classes -->
		<copy todir="${classes.dir}/eu">
			<fileset dir="${mcp.dir}/reobf/minecraft/eu" />
		</copy>

		<!-- Copy resources -->
		<copy todir="${classes.dir}">
			<fileset dir="res/" />
		</copy>

		<!-- Copy resources -->
		<copy todir="${classes.dir}">
			<fileset dir="." includes="mcmod.info" />
		</copy>

		<!-- Reset src dir to post-forge-install state -->
		<delete dir="${mcpsrc.dir}/eu"/>

		<!-- Remove the according compiled classes from the bin dir as well -->
		<delete dir="${mcpbin.dir}/eu"/>

		<delete dir="${mcplib.dir}" includes="${mod.name}-dep-*" failonerror="false"/>

	</target>

	<!-- Package the compiled files -->
	<target name="package" depends="compile">

		<delete dir="${jar.dir}"/>
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/${mod.name}-${mod.version}.jar" basedir="${classes.dir}"/>

	</target>

	<target name="install" depends="package">
		<copy todir="C:\Users\Besitzer\AppData\Roaming\maltecraft-1.4.7-5\.minecraft\mods">
			<fileset dir="${jar.dir}" includes="${mod.name}-${mod.version}.jar" />
		</copy>
	</target>

	<target name="install-server" depends="package">
		<copy todir="D:\Games\Minecraft\server\mods">
			<fileset dir="${jar.dir}" includes="${mod.name}-${mod.version}.jar" />
		</copy>
	</target>

	<target name="start-server" depends="install-server">
		<java jar="D:\Games\Minecraft\server\minecraft_server.jar"
			fork="true"
			failonerror="true"
			maxmemory="1024m"
			dir="D:\Games\Minecraft\server"
		>
			<arg value="nogui"/>
		</java>
	</target>

	<target name="gui-server" depends="install-server">
		<echo message="Starting server..." />
		<java jar="D:\Games\Minecraft\server\minecraft_server.jar"
			fork="true"
			spawn="true"
			maxmemory="1024m"
			dir="D:\Games\Minecraft\server"
		/>
	</target>

	<!-- Default target to run -->
	<target name="main" depends="package"/>

</project>
